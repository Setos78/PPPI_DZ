class GridMove
{
    public void moveUp(ref int[,] grid)
    {


        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 4; j++)
                if (grid[i, j] == 0)
                {
                    for (int k = j + 1; k < 4; k++)
                        if (grid[i, k] != 0)
                        {
                            grid[i, j] = grid[i, k];
                            grid[i, k] = 0;
                            for (int z = j + 1; z < 4; z++)
                                if (grid[i, j] == grid[i, z])
                                {
                                    grid[i, j] *= 2;
                                    grid[i, z] = 0;
                                    break;
                                }
                                else if (grid[i, z] != 0) break;
                            break;
                        }
                }
                else
                {
                    for (int z = j + 1; z < 4; z++)
                        if (grid[i, j] == grid[i, z])
                        {
                            grid[i, j] *= 2;
                            grid[i, z] = 0;
                            break;
                        }
                        else if (grid[i, z] != 0) break;
                }

    }

    public void moveDown(ref int[,] grid)
    {
        for (int i = 0; i < 4; i++)
            for (int j = 3; j >= 0; j--)
                if (grid[i, j] == 0)
                {
                    for (int k = j - 1; k >= 0; k--)
                        if (grid[i, k] != 0)
                        {
                            grid[i, j] = grid[i, k];
                            grid[i, k] = 0;
                            for (int z = j - 1; z >= 0; z--)
                                if (grid[i, j] == grid[i, z])
                                {
                                    grid[i, j] *= 2;
                                    grid[i, z] = 0;
                                    break;
                                }
                                else if (grid[i, z] != 0) break;
                            break;
                        }
                }
                else
                {
                    for (int z = j - 1; z >= 0; z--)
                        if (grid[i, j] == grid[i, z])
                        {
                            grid[i, j] *= 2;
                            grid[i, z] = 0;
                            break;
                        }
                        else if (grid[i, z] != 0) break;
                }
    }

    public void moveLeft(ref int[,] grid)
    {
        for (int i = 0; i < 4; i++)
            for (int j = 3; j >= 0; j--)
                if (grid[i, j] == 0)
                {
                    for (int k = i + 1; k < 4; k++)
                        if (grid[k, j] != 0)
                        {
                            grid[i, j] = grid[k, j];
                            grid[k, j] = 0;
                            for (int z = i + 1; z < 4; z++)
                                if (grid[i, j] == grid[z, j])
                                {
                                    grid[i, j] *= 2;
                                    grid[z, j] = 0;
                                    break;
                                }
                                else if (grid[z, j] != 0) break;
                            break;
                        }
                }
                else
                {
                    for (int z = i + 1; z < 4; z++)
                        if (grid[i, j] == grid[z, j])
                        {
                            grid[i, j] *= 2;
                            grid[z, j] = 0;
                            break;
                        }
                        else if (grid[z, j] != 0) break;
                }
    }

    public void moveRight(ref int[,] grid)
    {
        for (int i = 0; i < 4; i++)
            for (int j = 3; j >= 0; j--)
                if (grid[i, j] == 0)
                {
                    for (int k = i - 1; k >= 0; k--)
                        if (grid[k, j] != 0)
                        {
                            grid[i, j] = grid[k, j];
                            grid[k, j] = 0;
                            for (int z = i - 1; z >= 0; z--)
                                if (grid[i, j] == grid[z, j])
                                {
                                    grid[i, j] *= 2;
                                    grid[z, j] = 0;
                                    break;
                                }
                                else if (grid[z, j] != 0) break;
                            break;
                        }
                }
                else
                {
                    for (int z = i - 1; z >= 0; z--)
                        if (grid[i, j] == grid[z, j])
                        {
                            grid[i, j] *= 2;
                            grid[z, j] = 0;
                            break;
                        }
                        else if (grid[z, j] != 0) break;
                }
    }
}
